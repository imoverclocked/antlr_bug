plugins {
    // Apply the java-library plugin to add support for Java Library
    id "java-library"
    id "antlr"
}

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

generateGrammarSource {
   /*
    * -- all defaults generates:
    *
    * error(110): com/example/foo/FooLexer.g4:3:7: can't find or load grammar FooTokens
    * error(56): /Users/imoverclocked/antlr_bug/src/main/antlr/com/example/foo/FooLexer.g4:5:5: reference to undefined rule: FOO_TOKEN
    * error(56): /Users/imoverclocked/antlr_bug/src/main/antlr/com/example/foo/FooLexer.g4:9:9: reference to undefined rule: BAR_TOKEN
    */

   /*
    *     arguments += [
    *       "-lib", "src/main/antlr",
    *       "-package", "com.example.foo"
    *     ]
    * -- generates:
    *
    * error(110): com/example/foo/FooLexer.g4:3:7: can't find or load grammar FooTokens
    * error(56): /Users/imoverclocked/antlr_bug/src/main/antlr/com/example/foo/FooLexer.g4:5:5: reference to undefined rule: FOO_TOKEN
    * error(56): /Users/imoverclocked/antlr_bug/src/main/antlr/com/example/foo/FooLexer.g4:9:9: reference to undefined rule: BAR_TOKEN
    */

   /*
    *     arguments += [
    *       "-lib", "src/main/antlr/com/example/foo",
    *       "-package", "com.example.foo"
    *     ]
    * -- generates:
    *
    * error(114): com/example/foo/Foo.g4:3:21: cannot find tokens file com/example/foo/FooLexer.tokens
    * warning(125): com/example/foo/Foo.g4:5:5: implicit definition of token FOO in parser
    */

   /*
    *     arguments += [
    *       "-lib", "${projectDir}/build/generated-src/antlr/main".toString(),
    *       "-package", "com.example.foo"
    *     ]
    * -- generates:
    *
    * error(110): com/example/foo/FooLexer.g4:3:7: can't find or load grammar FooTokens
    * error(56): /Users/imoverclocked/antlr_bug/src/main/antlr/com/example/foo/FooLexer.g4:5:5: reference to undefined rule: FOO_TOKEN
    * error(56): /Users/imoverclocked/antlr_bug/src/main/antlr/com/example/foo/FooLexer.g4:9:9: reference to undefined rule: BAR_TOKEN
    */

   /*
    *     arguments += [
    *       "-lib", "${projectDir}/build/generated-src/antlr/main/com/example/foo".toString(),
    *       "-package", "com.example.foo"
    *     ]
    * -- generates:
    *
    * error(5):  directory not found: /Users/imoverclocked/antlr_bug/build/generated-src/antlr/main/com/example/foo
    */

   /*
    * -- The `antlr4` command can work if:
    *
    * % cd src/main/antlr
    * % mkdir -p com/example/foo/out/com/example/foo
    * % antlr4 -o com/example/foo/out/ -lib com/example/foo/out/com/example/foo com/example/foo/FooLexer.g4 com/example/foo/Foo.g4
    *
    * however, there seems to be no way to translate this into a gradle hack
    * because the output directory is wiped away at the beginning of the
    * "generateGrammarSource" task
    */
}

dependencies {
    antlr("org.antlr:antlr4:4.7.1")
    compile("org.antlr:antlr4-runtime:4.7.1")
}
